{"name": "查询能源关岗请休假", "status": "broken", "statusDetails": {"message": "json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)", "trace": "self = <UI_active.test_case1_01.Test_Case1_01 object at 0x0C842FE8>\n\n    @allure.story('二级标签')\n    @allure.title('查询能源关岗请休假')\n    def test_01(self):\n        self.lo.nyggqxj_page(Yaml_Case1()['查询条件'])\n>       self.lo.nyggqxj_url()\n\ntest_case1_01.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nTest_Case1\\Case1_Login.py:53: in nyggqxj_url\n    ii = json.loads(i.text)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\json\\__init__.py:357: in loads\n    return _default_decoder.decode(s)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\json\\decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <json.decoder.JSONDecoder object at 0x0214A910>, s = 'log', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\json\\decoder.py:355: JSONDecodeError"}, "start": 1646123177008, "stop": 1646123187029, "uuid": "1bb30d4f-7be6-4153-a3ee-9923f60cf6a7", "historyId": "49bb1638d720f618459afafdc65a0d44", "testCaseId": "e43963c740663dcd74b51d20c37d3aec", "fullName": "test_case1_01.Test_Case1_01#test_01", "labels": [{"name": "feature", "value": "一级标签"}, {"name": "story", "value": "二级标签"}, {"name": "suite", "value": "test_case1_01"}, {"name": "subSuite", "value": "Test_Case1_01"}, {"name": "host", "value": "DESKTOP-4SM3BQR"}, {"name": "thread", "value": "33716-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case1_01"}]}